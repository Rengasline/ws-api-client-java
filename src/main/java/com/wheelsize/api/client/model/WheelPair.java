/*
 * Wheel Fitment API
 * The Wheel Fitment API allows for programmatic access to the database of www.wheel-size.com and its services. Use this API to retrieve information about vehicle fitment database for rims and tires, including OE and option fitments, and plus/minus sizing fitment information. A variety of country and language specific options are available. The coverage of fitment data for vehicles manufactured since 2000 is nearly 100%.  The information about fitment data is updated on a daily basis.
 *
 * OpenAPI spec version: v1
 * Contact: info@wheel-size.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wheelsize.api.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.wheelsize.api.client.model.Wheel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * WheelPair
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-17T19:57:08.897+06:00")
public class WheelPair {
  @SerializedName("showing_fp_only")
  private Boolean showingFpOnly = null;

  @SerializedName("is_stock")
  private Boolean isStock = null;

  @SerializedName("front")
  private Wheel front = null;

  @SerializedName("rear")
  private Wheel rear = null;

  public WheelPair showingFpOnly(Boolean showingFpOnly) {
    this.showingFpOnly = showingFpOnly;
    return this;
  }

   /**
   * Show front pair only
   * @return showingFpOnly
  **/
  @ApiModelProperty(required = true, value = "Show front pair only")
  public Boolean isShowingFpOnly() {
    return showingFpOnly;
  }

  public void setShowingFpOnly(Boolean showingFpOnly) {
    this.showingFpOnly = showingFpOnly;
  }

  public WheelPair isStock(Boolean isStock) {
    this.isStock = isStock;
    return this;
  }

   /**
   * Original Equipment (OE)
   * @return isStock
  **/
  @ApiModelProperty(required = true, value = "Original Equipment (OE)")
  public Boolean isIsStock() {
    return isStock;
  }

  public void setIsStock(Boolean isStock) {
    this.isStock = isStock;
  }

  public WheelPair front(Wheel front) {
    this.front = front;
    return this;
  }

   /**
   * Get front
   * @return front
  **/
  @ApiModelProperty(required = true, value = "")
  public Wheel getFront() {
    return front;
  }

  public void setFront(Wheel front) {
    this.front = front;
  }

  public WheelPair rear(Wheel rear) {
    this.rear = rear;
    return this;
  }

   /**
   * Get rear
   * @return rear
  **/
  @ApiModelProperty(required = true, value = "")
  public Wheel getRear() {
    return rear;
  }

  public void setRear(Wheel rear) {
    this.rear = rear;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WheelPair wheelPair = (WheelPair) o;
    return Objects.equals(this.showingFpOnly, wheelPair.showingFpOnly) &&
        Objects.equals(this.isStock, wheelPair.isStock) &&
        Objects.equals(this.front, wheelPair.front) &&
        Objects.equals(this.rear, wheelPair.rear);
  }

  @Override
  public int hashCode() {
    return Objects.hash(showingFpOnly, isStock, front, rear);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WheelPair {\n");
    
    sb.append("    showingFpOnly: ").append(toIndentedString(showingFpOnly)).append("\n");
    sb.append("    isStock: ").append(toIndentedString(isStock)).append("\n");
    sb.append("    front: ").append(toIndentedString(front)).append("\n");
    sb.append("    rear: ").append(toIndentedString(rear)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

