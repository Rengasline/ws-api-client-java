/*
 * Wheel Fitment API
 * The Wheel Fitment API allows for programmatic access to the database of www.wheel-size.com and its services. Use this API to retrieve information about vehicle fitment database for rims and tires, including OE and option fitments, and plus/minus sizing fitment information. A variety of country and language specific options are available. The coverage of fitment data for vehicles manufactured since 2000 is nearly 100%.  The information about fitment data is updated on a daily basis.
 *
 * OpenAPI spec version: v1
 * Contact: info@wheel-size.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wheelsize.api.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.wheelsize.api.client.model.Body;
import com.wheelsize.api.client.model.Make;
import com.wheelsize.api.client.model.Model;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Generation
 */

public class Generation {
  @SerializedName("make")
  private Make make = null;

  @SerializedName("model")
  private Model model = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("bodies")
  private List<Body> bodies = new ArrayList<Body>();

  @SerializedName("start_year")
  private Integer startYear = null;

  @SerializedName("end_year")
  private Integer endYear = null;

  @SerializedName("years")
  private List<Integer> years = null;

  public Generation make(Make make) {
    this.make = make;
    return this;
  }

   /**
   * Get make
   * @return make
  **/
  @ApiModelProperty(required = true, value = "")
  public Make getMake() {
    return make;
  }

  public void setMake(Make make) {
    this.make = make;
  }

  public Generation model(Model model) {
    this.model = model;
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @ApiModelProperty(required = true, value = "")
  public Model getModel() {
    return model;
  }

  public void setModel(Model model) {
    this.model = model;
  }

  public Generation name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Generation name (e.g. &#x60;III Restyling&#x60;)
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Generation name (e.g. `III Restyling`)")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Generation bodies(List<Body> bodies) {
    this.bodies = bodies;
    return this;
  }

  public Generation addBodiesItem(Body bodiesItem) {
    this.bodies.add(bodiesItem);
    return this;
  }

   /**
   * Get bodies
   * @return bodies
  **/
  @ApiModelProperty(required = true, value = "")
  public List<Body> getBodies() {
    return bodies;
  }

  public void setBodies(List<Body> bodies) {
    this.bodies = bodies;
  }

  public Generation startYear(Integer startYear) {
    this.startYear = startYear;
    return this;
  }

   /**
   * Generation start year
   * @return startYear
  **/
  @ApiModelProperty(value = "Generation start year")
  public Integer getStartYear() {
    return startYear;
  }

  public void setStartYear(Integer startYear) {
    this.startYear = startYear;
  }

  public Generation endYear(Integer endYear) {
    this.endYear = endYear;
    return this;
  }

   /**
   * Generation end year. It equals to the __*&#x60;current year + 1&#x60;*__ if it is still in production.
   * @return endYear
  **/
  @ApiModelProperty(value = "Generation end year. It equals to the __*`current year + 1`*__ if it is still in production.")
  public Integer getEndYear() {
    return endYear;
  }

  public void setEndYear(Integer endYear) {
    this.endYear = endYear;
  }

  public Generation years(List<Integer> years) {
    this.years = years;
    return this;
  }

  public Generation addYearsItem(Integer yearsItem) {
    if (this.years == null) {
      this.years = new ArrayList<Integer>();
    }
    this.years.add(yearsItem);
    return this;
  }

   /**
   * Generation production years
   * @return years
  **/
  @ApiModelProperty(value = "Generation production years")
  public List<Integer> getYears() {
    return years;
  }

  public void setYears(List<Integer> years) {
    this.years = years;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Generation generation = (Generation) o;
    return Objects.equals(this.make, generation.make) &&
        Objects.equals(this.model, generation.model) &&
        Objects.equals(this.name, generation.name) &&
        Objects.equals(this.bodies, generation.bodies) &&
        Objects.equals(this.startYear, generation.startYear) &&
        Objects.equals(this.endYear, generation.endYear) &&
        Objects.equals(this.years, generation.years);
  }

  @Override
  public int hashCode() {
    return Objects.hash(make, model, name, bodies, startYear, endYear, years);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Generation {\n");
    
    sb.append("    make: ").append(toIndentedString(make)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    bodies: ").append(toIndentedString(bodies)).append("\n");
    sb.append("    startYear: ").append(toIndentedString(startYear)).append("\n");
    sb.append("    endYear: ").append(toIndentedString(endYear)).append("\n");
    sb.append("    years: ").append(toIndentedString(years)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

