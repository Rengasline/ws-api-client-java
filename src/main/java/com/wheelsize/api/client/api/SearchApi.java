/*
 * Wheel Fitment API
 * The Wheel Fitment API allows for programmatic access to the database of www.wheel-size.com and its services. Use this API to retrieve information about vehicle fitment database for rims and tires, including OE and option fitments, and plus/minus sizing fitment information. A variety of country and language specific options are available. The coverage of fitment data for vehicles manufactured since 2000 is nearly 100%.  The information about fitment data is updated on a daily basis.
 *
 * OpenAPI spec version: v1
 * Contact: info@wheel-size.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wheelsize.api.client.api;

import com.wheelsize.api.client.ApiCallback;
import com.wheelsize.api.client.ApiClient;
import com.wheelsize.api.client.ApiException;
import com.wheelsize.api.client.ApiResponse;
import com.wheelsize.api.client.Configuration;
import com.wheelsize.api.client.Pair;
import com.wheelsize.api.client.ProgressRequestBody;
import com.wheelsize.api.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import java.math.BigDecimal;
import com.wheelsize.api.client.model.MakeWithModels;
import com.wheelsize.api.client.model.Vehicle;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SearchApi {
    private ApiClient apiClient;

    public SearchApi() {
        this(Configuration.getDefaultApiClient());
    }

    public SearchApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for searchByHfTireList
     * @param tireDiameter Tire diameter, in (e.g. &#x60;31&#x60;) (required)
     * @param tireSectionWidth Tire section width, in (e.g. &#x60;10.5&#x60;) (required)
     * @param rimDiameterHf Rim diameter, in (e.g. &#x60;15&#x60;) (required)
     * @param lang Use this parameter anywhere in the API to get *&#x60;name&#x60;* field translation of the following objects: **&#x60;Make&#x60;**, **&#x60;Model&#x60;**, **&#x60;Market&#x60;**. Across the *&#x60;name&#x60;* this objects will have *&#x60;name_en&#x60;* field with original english name. By default &#x60;en&#x60; language is used.  Available languages: &#x60;en,de,ru,es,pt,fr,ja,zh-cn,zh-tw&#x60;. Currently translation works for chinese &#x60;zh-cn&#x60; language only (optional)
     * @param brands Show information only for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;mitsubishi,nissan,toyota&#x60;) (optional)
     * @param brandsExclude Don&#39;t show information for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;geely,great-wall&#x60;) (optional)
     * @param countries Show information for local manufacturers from specified countries only. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;us,gb,jp&#x60;) (optional)
     * @param countriesExclude Don&#39;t show information for local manufacturers from specified countries. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;ru,ua&#x60;) (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call searchByHfTireListCall(BigDecimal tireDiameter, BigDecimal tireSectionWidth, BigDecimal rimDiameterHf, String lang, String brands, String brandsExclude, String countries, String countriesExclude, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/search/by_hf_tire/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (tireDiameter != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("tire_diameter", tireDiameter));
        if (tireSectionWidth != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("tire_section_width", tireSectionWidth));
        if (rimDiameterHf != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("rim_diameter_hf", rimDiameterHf));
        if (lang != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("lang", lang));
        if (brands != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("brands", brands));
        if (brandsExclude != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("brands_exclude", brandsExclude));
        if (countries != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("countries", countries));
        if (countriesExclude != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("countries_exclude", countriesExclude));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "user_key" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call searchByHfTireListValidateBeforeCall(BigDecimal tireDiameter, BigDecimal tireSectionWidth, BigDecimal rimDiameterHf, String lang, String brands, String brandsExclude, String countries, String countriesExclude, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'tireDiameter' is set
        if (tireDiameter == null) {
            throw new ApiException("Missing the required parameter 'tireDiameter' when calling searchByHfTireList(Async)");
        }
        
        // verify the required parameter 'tireSectionWidth' is set
        if (tireSectionWidth == null) {
            throw new ApiException("Missing the required parameter 'tireSectionWidth' when calling searchByHfTireList(Async)");
        }
        
        // verify the required parameter 'rimDiameterHf' is set
        if (rimDiameterHf == null) {
            throw new ApiException("Missing the required parameter 'rimDiameterHf' when calling searchByHfTireList(Async)");
        }
        

        com.squareup.okhttp.Call call = searchByHfTireListCall(tireDiameter, tireSectionWidth, rimDiameterHf, lang, brands, brandsExclude, countries, countriesExclude, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Find models matching given high flotation tire
     * Get a list of model modifications that match the given tire size in high flotation sizing system
     * @param tireDiameter Tire diameter, in (e.g. &#x60;31&#x60;) (required)
     * @param tireSectionWidth Tire section width, in (e.g. &#x60;10.5&#x60;) (required)
     * @param rimDiameterHf Rim diameter, in (e.g. &#x60;15&#x60;) (required)
     * @param lang Use this parameter anywhere in the API to get *&#x60;name&#x60;* field translation of the following objects: **&#x60;Make&#x60;**, **&#x60;Model&#x60;**, **&#x60;Market&#x60;**. Across the *&#x60;name&#x60;* this objects will have *&#x60;name_en&#x60;* field with original english name. By default &#x60;en&#x60; language is used.  Available languages: &#x60;en,de,ru,es,pt,fr,ja,zh-cn,zh-tw&#x60;. Currently translation works for chinese &#x60;zh-cn&#x60; language only (optional)
     * @param brands Show information only for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;mitsubishi,nissan,toyota&#x60;) (optional)
     * @param brandsExclude Don&#39;t show information for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;geely,great-wall&#x60;) (optional)
     * @param countries Show information for local manufacturers from specified countries only. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;us,gb,jp&#x60;) (optional)
     * @param countriesExclude Don&#39;t show information for local manufacturers from specified countries. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;ru,ua&#x60;) (optional)
     * @return List&lt;MakeWithModels&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<MakeWithModels> searchByHfTireList(BigDecimal tireDiameter, BigDecimal tireSectionWidth, BigDecimal rimDiameterHf, String lang, String brands, String brandsExclude, String countries, String countriesExclude) throws ApiException {
        ApiResponse<List<MakeWithModels>> resp = searchByHfTireListWithHttpInfo(tireDiameter, tireSectionWidth, rimDiameterHf, lang, brands, brandsExclude, countries, countriesExclude);
        return resp.getData();
    }

    /**
     * Find models matching given high flotation tire
     * Get a list of model modifications that match the given tire size in high flotation sizing system
     * @param tireDiameter Tire diameter, in (e.g. &#x60;31&#x60;) (required)
     * @param tireSectionWidth Tire section width, in (e.g. &#x60;10.5&#x60;) (required)
     * @param rimDiameterHf Rim diameter, in (e.g. &#x60;15&#x60;) (required)
     * @param lang Use this parameter anywhere in the API to get *&#x60;name&#x60;* field translation of the following objects: **&#x60;Make&#x60;**, **&#x60;Model&#x60;**, **&#x60;Market&#x60;**. Across the *&#x60;name&#x60;* this objects will have *&#x60;name_en&#x60;* field with original english name. By default &#x60;en&#x60; language is used.  Available languages: &#x60;en,de,ru,es,pt,fr,ja,zh-cn,zh-tw&#x60;. Currently translation works for chinese &#x60;zh-cn&#x60; language only (optional)
     * @param brands Show information only for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;mitsubishi,nissan,toyota&#x60;) (optional)
     * @param brandsExclude Don&#39;t show information for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;geely,great-wall&#x60;) (optional)
     * @param countries Show information for local manufacturers from specified countries only. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;us,gb,jp&#x60;) (optional)
     * @param countriesExclude Don&#39;t show information for local manufacturers from specified countries. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;ru,ua&#x60;) (optional)
     * @return ApiResponse&lt;List&lt;MakeWithModels&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<MakeWithModels>> searchByHfTireListWithHttpInfo(BigDecimal tireDiameter, BigDecimal tireSectionWidth, BigDecimal rimDiameterHf, String lang, String brands, String brandsExclude, String countries, String countriesExclude) throws ApiException {
        com.squareup.okhttp.Call call = searchByHfTireListValidateBeforeCall(tireDiameter, tireSectionWidth, rimDiameterHf, lang, brands, brandsExclude, countries, countriesExclude, null, null);
        Type localVarReturnType = new TypeToken<List<MakeWithModels>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Find models matching given high flotation tire (asynchronously)
     * Get a list of model modifications that match the given tire size in high flotation sizing system
     * @param tireDiameter Tire diameter, in (e.g. &#x60;31&#x60;) (required)
     * @param tireSectionWidth Tire section width, in (e.g. &#x60;10.5&#x60;) (required)
     * @param rimDiameterHf Rim diameter, in (e.g. &#x60;15&#x60;) (required)
     * @param lang Use this parameter anywhere in the API to get *&#x60;name&#x60;* field translation of the following objects: **&#x60;Make&#x60;**, **&#x60;Model&#x60;**, **&#x60;Market&#x60;**. Across the *&#x60;name&#x60;* this objects will have *&#x60;name_en&#x60;* field with original english name. By default &#x60;en&#x60; language is used.  Available languages: &#x60;en,de,ru,es,pt,fr,ja,zh-cn,zh-tw&#x60;. Currently translation works for chinese &#x60;zh-cn&#x60; language only (optional)
     * @param brands Show information only for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;mitsubishi,nissan,toyota&#x60;) (optional)
     * @param brandsExclude Don&#39;t show information for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;geely,great-wall&#x60;) (optional)
     * @param countries Show information for local manufacturers from specified countries only. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;us,gb,jp&#x60;) (optional)
     * @param countriesExclude Don&#39;t show information for local manufacturers from specified countries. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;ru,ua&#x60;) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call searchByHfTireListAsync(BigDecimal tireDiameter, BigDecimal tireSectionWidth, BigDecimal rimDiameterHf, String lang, String brands, String brandsExclude, String countries, String countriesExclude, final ApiCallback<List<MakeWithModels>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = searchByHfTireListValidateBeforeCall(tireDiameter, tireSectionWidth, rimDiameterHf, lang, brands, brandsExclude, countries, countriesExclude, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<MakeWithModels>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for searchByModelList
     * @param make Manufacturer slug name, use _**&#x60;GET /makes/&#x60;**_ to get possible values (e.g. &#x60;mitsubishi&#x60;) (required)
     * @param model Model slug name, use _**&#x60;GET /models/&#x60;**_ to get possible values (e.g. &#x60;outlander&#x60;) (required)
     * @param year You can use _**&#x60;GET /years/&#x60;**_ to get possible years (e.g. &#x60;2015&#x60;) (required)
     * @param trim Use *&#x60;slug&#x60;* from _**&#x60;GET /trims/&#x60;**_ methods here. (e.g. &#x60;20-dla-gg2w-iii-restyling&#x60;) (optional)
     * @param onlyOem Show only original equipment wheels (optional)
     * @param lang Use this parameter anywhere in the API to get *&#x60;name&#x60;* field translation of the following objects: **&#x60;Make&#x60;**, **&#x60;Model&#x60;**, **&#x60;Market&#x60;**. Across the *&#x60;name&#x60;* this objects will have *&#x60;name_en&#x60;* field with original english name. By default &#x60;en&#x60; language is used.  Available languages: &#x60;en,de,ru,es,pt,fr,ja,zh-cn,zh-tw&#x60;. Currently translation works for chinese &#x60;zh-cn&#x60; language only (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call searchByModelListCall(String make, String model, Integer year, String trim, Boolean onlyOem, String lang, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/search/by_model/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (make != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("make", make));
        if (model != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("model", model));
        if (year != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("year", year));
        if (trim != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("trim", trim));
        if (onlyOem != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("only_oem", onlyOem));
        if (lang != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("lang", lang));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "user_key" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call searchByModelListValidateBeforeCall(String make, String model, Integer year, String trim, Boolean onlyOem, String lang, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'make' is set
        if (make == null) {
            throw new ApiException("Missing the required parameter 'make' when calling searchByModelList(Async)");
        }
        
        // verify the required parameter 'model' is set
        if (model == null) {
            throw new ApiException("Missing the required parameter 'model' when calling searchByModelList(Async)");
        }
        
        // verify the required parameter 'year' is set
        if (year == null) {
            throw new ApiException("Missing the required parameter 'year' when calling searchByModelList(Async)");
        }
        

        com.squareup.okhttp.Call call = searchByModelListCall(make, model, year, trim, onlyOem, lang, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Find OE and option fitments by model/year/trim
     * Find OE and option fitments that match the given manufacturer, model, year and trim.  **It&#39;s an alias** for _**&#x60;GET /vehicles/&#x60;**_ method
     * @param make Manufacturer slug name, use _**&#x60;GET /makes/&#x60;**_ to get possible values (e.g. &#x60;mitsubishi&#x60;) (required)
     * @param model Model slug name, use _**&#x60;GET /models/&#x60;**_ to get possible values (e.g. &#x60;outlander&#x60;) (required)
     * @param year You can use _**&#x60;GET /years/&#x60;**_ to get possible years (e.g. &#x60;2015&#x60;) (required)
     * @param trim Use *&#x60;slug&#x60;* from _**&#x60;GET /trims/&#x60;**_ methods here. (e.g. &#x60;20-dla-gg2w-iii-restyling&#x60;) (optional)
     * @param onlyOem Show only original equipment wheels (optional)
     * @param lang Use this parameter anywhere in the API to get *&#x60;name&#x60;* field translation of the following objects: **&#x60;Make&#x60;**, **&#x60;Model&#x60;**, **&#x60;Market&#x60;**. Across the *&#x60;name&#x60;* this objects will have *&#x60;name_en&#x60;* field with original english name. By default &#x60;en&#x60; language is used.  Available languages: &#x60;en,de,ru,es,pt,fr,ja,zh-cn,zh-tw&#x60;. Currently translation works for chinese &#x60;zh-cn&#x60; language only (optional)
     * @return List&lt;Vehicle&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<Vehicle> searchByModelList(String make, String model, Integer year, String trim, Boolean onlyOem, String lang) throws ApiException {
        ApiResponse<List<Vehicle>> resp = searchByModelListWithHttpInfo(make, model, year, trim, onlyOem, lang);
        return resp.getData();
    }

    /**
     * Find OE and option fitments by model/year/trim
     * Find OE and option fitments that match the given manufacturer, model, year and trim.  **It&#39;s an alias** for _**&#x60;GET /vehicles/&#x60;**_ method
     * @param make Manufacturer slug name, use _**&#x60;GET /makes/&#x60;**_ to get possible values (e.g. &#x60;mitsubishi&#x60;) (required)
     * @param model Model slug name, use _**&#x60;GET /models/&#x60;**_ to get possible values (e.g. &#x60;outlander&#x60;) (required)
     * @param year You can use _**&#x60;GET /years/&#x60;**_ to get possible years (e.g. &#x60;2015&#x60;) (required)
     * @param trim Use *&#x60;slug&#x60;* from _**&#x60;GET /trims/&#x60;**_ methods here. (e.g. &#x60;20-dla-gg2w-iii-restyling&#x60;) (optional)
     * @param onlyOem Show only original equipment wheels (optional)
     * @param lang Use this parameter anywhere in the API to get *&#x60;name&#x60;* field translation of the following objects: **&#x60;Make&#x60;**, **&#x60;Model&#x60;**, **&#x60;Market&#x60;**. Across the *&#x60;name&#x60;* this objects will have *&#x60;name_en&#x60;* field with original english name. By default &#x60;en&#x60; language is used.  Available languages: &#x60;en,de,ru,es,pt,fr,ja,zh-cn,zh-tw&#x60;. Currently translation works for chinese &#x60;zh-cn&#x60; language only (optional)
     * @return ApiResponse&lt;List&lt;Vehicle&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<Vehicle>> searchByModelListWithHttpInfo(String make, String model, Integer year, String trim, Boolean onlyOem, String lang) throws ApiException {
        com.squareup.okhttp.Call call = searchByModelListValidateBeforeCall(make, model, year, trim, onlyOem, lang, null, null);
        Type localVarReturnType = new TypeToken<List<Vehicle>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Find OE and option fitments by model/year/trim (asynchronously)
     * Find OE and option fitments that match the given manufacturer, model, year and trim.  **It&#39;s an alias** for _**&#x60;GET /vehicles/&#x60;**_ method
     * @param make Manufacturer slug name, use _**&#x60;GET /makes/&#x60;**_ to get possible values (e.g. &#x60;mitsubishi&#x60;) (required)
     * @param model Model slug name, use _**&#x60;GET /models/&#x60;**_ to get possible values (e.g. &#x60;outlander&#x60;) (required)
     * @param year You can use _**&#x60;GET /years/&#x60;**_ to get possible years (e.g. &#x60;2015&#x60;) (required)
     * @param trim Use *&#x60;slug&#x60;* from _**&#x60;GET /trims/&#x60;**_ methods here. (e.g. &#x60;20-dla-gg2w-iii-restyling&#x60;) (optional)
     * @param onlyOem Show only original equipment wheels (optional)
     * @param lang Use this parameter anywhere in the API to get *&#x60;name&#x60;* field translation of the following objects: **&#x60;Make&#x60;**, **&#x60;Model&#x60;**, **&#x60;Market&#x60;**. Across the *&#x60;name&#x60;* this objects will have *&#x60;name_en&#x60;* field with original english name. By default &#x60;en&#x60; language is used.  Available languages: &#x60;en,de,ru,es,pt,fr,ja,zh-cn,zh-tw&#x60;. Currently translation works for chinese &#x60;zh-cn&#x60; language only (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call searchByModelListAsync(String make, String model, Integer year, String trim, Boolean onlyOem, String lang, final ApiCallback<List<Vehicle>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = searchByModelListValidateBeforeCall(make, model, year, trim, onlyOem, lang, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<Vehicle>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for searchByRimList
     * @param boltPattern Bolt pattern combines number of stud holes and pitch circle diameter. Use _**&#x60;GET /bolt-patterns/&#x60;**_ to get possible values (e.g. &#x60;5x105&#x60;) (required)
     * @param rimDiameter Rim diameter, in (e.g. &#x60;16&#x60;) (required)
     * @param rimWidth Rim width, in (e.g. &#x60;7&#x60;) (required)
     * @param offset Rim offset, mm (e.g. &#x60;40&#x60;) (optional)
     * @param offsetMin Lower bound for rim offset, mm (e.g. &#x60;35&#x60;) (optional)
     * @param offsetMax Upper bound for rim offset, mm (e.g. &#x60;45&#x60;) (optional)
     * @param cb Centre bore value, mm (e.g. &#x60;60&#x60;) (optional)
     * @param cbMin Lower bound for centre bore value, mm (e.g. &#x60;55&#x60;) (optional)
     * @param cbMax Upper bound for centre bore value, mm (e.g. &#x60;65&#x60;) (optional)
     * @param lang Use this parameter anywhere in the API to get *&#x60;name&#x60;* field translation of the following objects: **&#x60;Make&#x60;**, **&#x60;Model&#x60;**, **&#x60;Market&#x60;**. Across the *&#x60;name&#x60;* this objects will have *&#x60;name_en&#x60;* field with original english name. By default &#x60;en&#x60; language is used.  Available languages: &#x60;en,de,ru,es,pt,fr,ja,zh-cn,zh-tw&#x60;. Currently translation works for chinese &#x60;zh-cn&#x60; language only (optional)
     * @param brands Show information only for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;mitsubishi,nissan,toyota&#x60;) (optional)
     * @param brandsExclude Don&#39;t show information for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;geely,great-wall&#x60;) (optional)
     * @param countries Show information for local manufacturers from specified countries only. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;us,gb,jp&#x60;) (optional)
     * @param countriesExclude Don&#39;t show information for local manufacturers from specified countries. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;ru,ua&#x60;) (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call searchByRimListCall(String boltPattern, BigDecimal rimDiameter, BigDecimal rimWidth, BigDecimal offset, BigDecimal offsetMin, BigDecimal offsetMax, BigDecimal cb, BigDecimal cbMin, BigDecimal cbMax, String lang, String brands, String brandsExclude, String countries, String countriesExclude, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/search/by_rim/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (boltPattern != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("bolt_pattern", boltPattern));
        if (rimDiameter != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("rim_diameter", rimDiameter));
        if (rimWidth != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("rim_width", rimWidth));
        if (offset != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("offset", offset));
        if (offsetMin != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("offset_min", offsetMin));
        if (offsetMax != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("offset_max", offsetMax));
        if (cb != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("cb", cb));
        if (cbMin != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("cb_min", cbMin));
        if (cbMax != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("cb_max", cbMax));
        if (lang != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("lang", lang));
        if (brands != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("brands", brands));
        if (brandsExclude != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("brands_exclude", brandsExclude));
        if (countries != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("countries", countries));
        if (countriesExclude != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("countries_exclude", countriesExclude));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "user_key" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call searchByRimListValidateBeforeCall(String boltPattern, BigDecimal rimDiameter, BigDecimal rimWidth, BigDecimal offset, BigDecimal offsetMin, BigDecimal offsetMax, BigDecimal cb, BigDecimal cbMin, BigDecimal cbMax, String lang, String brands, String brandsExclude, String countries, String countriesExclude, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'boltPattern' is set
        if (boltPattern == null) {
            throw new ApiException("Missing the required parameter 'boltPattern' when calling searchByRimList(Async)");
        }
        
        // verify the required parameter 'rimDiameter' is set
        if (rimDiameter == null) {
            throw new ApiException("Missing the required parameter 'rimDiameter' when calling searchByRimList(Async)");
        }
        
        // verify the required parameter 'rimWidth' is set
        if (rimWidth == null) {
            throw new ApiException("Missing the required parameter 'rimWidth' when calling searchByRimList(Async)");
        }
        

        com.squareup.okhttp.Call call = searchByRimListCall(boltPattern, rimDiameter, rimWidth, offset, offsetMin, offsetMax, cb, cbMin, cbMax, lang, brands, brandsExclude, countries, countriesExclude, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Find models matching given rim parameters
     * Get a list of model modifications that match the given rim parameters, grouped by manufacturer.  It&#39;s an alias for _**&#x60;GET /bolt-patterns/{bolt_pattern}/&#x60;**_        method with given path and query parameters.
     * @param boltPattern Bolt pattern combines number of stud holes and pitch circle diameter. Use _**&#x60;GET /bolt-patterns/&#x60;**_ to get possible values (e.g. &#x60;5x105&#x60;) (required)
     * @param rimDiameter Rim diameter, in (e.g. &#x60;16&#x60;) (required)
     * @param rimWidth Rim width, in (e.g. &#x60;7&#x60;) (required)
     * @param offset Rim offset, mm (e.g. &#x60;40&#x60;) (optional)
     * @param offsetMin Lower bound for rim offset, mm (e.g. &#x60;35&#x60;) (optional)
     * @param offsetMax Upper bound for rim offset, mm (e.g. &#x60;45&#x60;) (optional)
     * @param cb Centre bore value, mm (e.g. &#x60;60&#x60;) (optional)
     * @param cbMin Lower bound for centre bore value, mm (e.g. &#x60;55&#x60;) (optional)
     * @param cbMax Upper bound for centre bore value, mm (e.g. &#x60;65&#x60;) (optional)
     * @param lang Use this parameter anywhere in the API to get *&#x60;name&#x60;* field translation of the following objects: **&#x60;Make&#x60;**, **&#x60;Model&#x60;**, **&#x60;Market&#x60;**. Across the *&#x60;name&#x60;* this objects will have *&#x60;name_en&#x60;* field with original english name. By default &#x60;en&#x60; language is used.  Available languages: &#x60;en,de,ru,es,pt,fr,ja,zh-cn,zh-tw&#x60;. Currently translation works for chinese &#x60;zh-cn&#x60; language only (optional)
     * @param brands Show information only for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;mitsubishi,nissan,toyota&#x60;) (optional)
     * @param brandsExclude Don&#39;t show information for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;geely,great-wall&#x60;) (optional)
     * @param countries Show information for local manufacturers from specified countries only. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;us,gb,jp&#x60;) (optional)
     * @param countriesExclude Don&#39;t show information for local manufacturers from specified countries. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;ru,ua&#x60;) (optional)
     * @return List&lt;MakeWithModels&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<MakeWithModels> searchByRimList(String boltPattern, BigDecimal rimDiameter, BigDecimal rimWidth, BigDecimal offset, BigDecimal offsetMin, BigDecimal offsetMax, BigDecimal cb, BigDecimal cbMin, BigDecimal cbMax, String lang, String brands, String brandsExclude, String countries, String countriesExclude) throws ApiException {
        ApiResponse<List<MakeWithModels>> resp = searchByRimListWithHttpInfo(boltPattern, rimDiameter, rimWidth, offset, offsetMin, offsetMax, cb, cbMin, cbMax, lang, brands, brandsExclude, countries, countriesExclude);
        return resp.getData();
    }

    /**
     * Find models matching given rim parameters
     * Get a list of model modifications that match the given rim parameters, grouped by manufacturer.  It&#39;s an alias for _**&#x60;GET /bolt-patterns/{bolt_pattern}/&#x60;**_        method with given path and query parameters.
     * @param boltPattern Bolt pattern combines number of stud holes and pitch circle diameter. Use _**&#x60;GET /bolt-patterns/&#x60;**_ to get possible values (e.g. &#x60;5x105&#x60;) (required)
     * @param rimDiameter Rim diameter, in (e.g. &#x60;16&#x60;) (required)
     * @param rimWidth Rim width, in (e.g. &#x60;7&#x60;) (required)
     * @param offset Rim offset, mm (e.g. &#x60;40&#x60;) (optional)
     * @param offsetMin Lower bound for rim offset, mm (e.g. &#x60;35&#x60;) (optional)
     * @param offsetMax Upper bound for rim offset, mm (e.g. &#x60;45&#x60;) (optional)
     * @param cb Centre bore value, mm (e.g. &#x60;60&#x60;) (optional)
     * @param cbMin Lower bound for centre bore value, mm (e.g. &#x60;55&#x60;) (optional)
     * @param cbMax Upper bound for centre bore value, mm (e.g. &#x60;65&#x60;) (optional)
     * @param lang Use this parameter anywhere in the API to get *&#x60;name&#x60;* field translation of the following objects: **&#x60;Make&#x60;**, **&#x60;Model&#x60;**, **&#x60;Market&#x60;**. Across the *&#x60;name&#x60;* this objects will have *&#x60;name_en&#x60;* field with original english name. By default &#x60;en&#x60; language is used.  Available languages: &#x60;en,de,ru,es,pt,fr,ja,zh-cn,zh-tw&#x60;. Currently translation works for chinese &#x60;zh-cn&#x60; language only (optional)
     * @param brands Show information only for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;mitsubishi,nissan,toyota&#x60;) (optional)
     * @param brandsExclude Don&#39;t show information for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;geely,great-wall&#x60;) (optional)
     * @param countries Show information for local manufacturers from specified countries only. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;us,gb,jp&#x60;) (optional)
     * @param countriesExclude Don&#39;t show information for local manufacturers from specified countries. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;ru,ua&#x60;) (optional)
     * @return ApiResponse&lt;List&lt;MakeWithModels&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<MakeWithModels>> searchByRimListWithHttpInfo(String boltPattern, BigDecimal rimDiameter, BigDecimal rimWidth, BigDecimal offset, BigDecimal offsetMin, BigDecimal offsetMax, BigDecimal cb, BigDecimal cbMin, BigDecimal cbMax, String lang, String brands, String brandsExclude, String countries, String countriesExclude) throws ApiException {
        com.squareup.okhttp.Call call = searchByRimListValidateBeforeCall(boltPattern, rimDiameter, rimWidth, offset, offsetMin, offsetMax, cb, cbMin, cbMax, lang, brands, brandsExclude, countries, countriesExclude, null, null);
        Type localVarReturnType = new TypeToken<List<MakeWithModels>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Find models matching given rim parameters (asynchronously)
     * Get a list of model modifications that match the given rim parameters, grouped by manufacturer.  It&#39;s an alias for _**&#x60;GET /bolt-patterns/{bolt_pattern}/&#x60;**_        method with given path and query parameters.
     * @param boltPattern Bolt pattern combines number of stud holes and pitch circle diameter. Use _**&#x60;GET /bolt-patterns/&#x60;**_ to get possible values (e.g. &#x60;5x105&#x60;) (required)
     * @param rimDiameter Rim diameter, in (e.g. &#x60;16&#x60;) (required)
     * @param rimWidth Rim width, in (e.g. &#x60;7&#x60;) (required)
     * @param offset Rim offset, mm (e.g. &#x60;40&#x60;) (optional)
     * @param offsetMin Lower bound for rim offset, mm (e.g. &#x60;35&#x60;) (optional)
     * @param offsetMax Upper bound for rim offset, mm (e.g. &#x60;45&#x60;) (optional)
     * @param cb Centre bore value, mm (e.g. &#x60;60&#x60;) (optional)
     * @param cbMin Lower bound for centre bore value, mm (e.g. &#x60;55&#x60;) (optional)
     * @param cbMax Upper bound for centre bore value, mm (e.g. &#x60;65&#x60;) (optional)
     * @param lang Use this parameter anywhere in the API to get *&#x60;name&#x60;* field translation of the following objects: **&#x60;Make&#x60;**, **&#x60;Model&#x60;**, **&#x60;Market&#x60;**. Across the *&#x60;name&#x60;* this objects will have *&#x60;name_en&#x60;* field with original english name. By default &#x60;en&#x60; language is used.  Available languages: &#x60;en,de,ru,es,pt,fr,ja,zh-cn,zh-tw&#x60;. Currently translation works for chinese &#x60;zh-cn&#x60; language only (optional)
     * @param brands Show information only for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;mitsubishi,nissan,toyota&#x60;) (optional)
     * @param brandsExclude Don&#39;t show information for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;geely,great-wall&#x60;) (optional)
     * @param countries Show information for local manufacturers from specified countries only. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;us,gb,jp&#x60;) (optional)
     * @param countriesExclude Don&#39;t show information for local manufacturers from specified countries. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;ru,ua&#x60;) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call searchByRimListAsync(String boltPattern, BigDecimal rimDiameter, BigDecimal rimWidth, BigDecimal offset, BigDecimal offsetMin, BigDecimal offsetMax, BigDecimal cb, BigDecimal cbMin, BigDecimal cbMax, String lang, String brands, String brandsExclude, String countries, String countriesExclude, final ApiCallback<List<MakeWithModels>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = searchByRimListValidateBeforeCall(boltPattern, rimDiameter, rimWidth, offset, offsetMin, offsetMax, cb, cbMin, cbMax, lang, brands, brandsExclude, countries, countriesExclude, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<MakeWithModels>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for searchByTireList
     * @param tireWidth Tire width, mm (e.g. &#x60;195&#x60;) (required)
     * @param aspectRatio Aspect ratio, % (e.g. &#x60;50&#x60;) (required)
     * @param rimDiameter Rim diameter, in (e.g. &#x60;16&#x60;) (required)
     * @param lang Use this parameter anywhere in the API to get *&#x60;name&#x60;* field translation of the following objects: **&#x60;Make&#x60;**, **&#x60;Model&#x60;**, **&#x60;Market&#x60;**. Across the *&#x60;name&#x60;* this objects will have *&#x60;name_en&#x60;* field with original english name. By default &#x60;en&#x60; language is used.  Available languages: &#x60;en,de,ru,es,pt,fr,ja,zh-cn,zh-tw&#x60;. Currently translation works for chinese &#x60;zh-cn&#x60; language only (optional)
     * @param brands Show information only for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;mitsubishi,nissan,toyota&#x60;) (optional)
     * @param brandsExclude Don&#39;t show information for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;geely,great-wall&#x60;) (optional)
     * @param countries Show information for local manufacturers from specified countries only. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;us,gb,jp&#x60;) (optional)
     * @param countriesExclude Don&#39;t show information for local manufacturers from specified countries. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;ru,ua&#x60;) (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call searchByTireListCall(BigDecimal tireWidth, BigDecimal aspectRatio, BigDecimal rimDiameter, String lang, String brands, String brandsExclude, String countries, String countriesExclude, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/search/by_tire/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (tireWidth != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("tire_width", tireWidth));
        if (aspectRatio != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("aspect_ratio", aspectRatio));
        if (rimDiameter != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("rim_diameter", rimDiameter));
        if (lang != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("lang", lang));
        if (brands != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("brands", brands));
        if (brandsExclude != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("brands_exclude", brandsExclude));
        if (countries != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("countries", countries));
        if (countriesExclude != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("countries_exclude", countriesExclude));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "user_key" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call searchByTireListValidateBeforeCall(BigDecimal tireWidth, BigDecimal aspectRatio, BigDecimal rimDiameter, String lang, String brands, String brandsExclude, String countries, String countriesExclude, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'tireWidth' is set
        if (tireWidth == null) {
            throw new ApiException("Missing the required parameter 'tireWidth' when calling searchByTireList(Async)");
        }
        
        // verify the required parameter 'aspectRatio' is set
        if (aspectRatio == null) {
            throw new ApiException("Missing the required parameter 'aspectRatio' when calling searchByTireList(Async)");
        }
        
        // verify the required parameter 'rimDiameter' is set
        if (rimDiameter == null) {
            throw new ApiException("Missing the required parameter 'rimDiameter' when calling searchByTireList(Async)");
        }
        

        com.squareup.okhttp.Call call = searchByTireListCall(tireWidth, aspectRatio, rimDiameter, lang, brands, brandsExclude, countries, countriesExclude, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Find models matching given tire parameters
     * Get a list of model modifications matching given tire, grouped by manufacturer.  It&#39;s an alias for _**&#x60;GET /tire/{tire}/&#x60;**_ method  (tire configuration is combined of required tire width, aspect ratio and rim diameter).
     * @param tireWidth Tire width, mm (e.g. &#x60;195&#x60;) (required)
     * @param aspectRatio Aspect ratio, % (e.g. &#x60;50&#x60;) (required)
     * @param rimDiameter Rim diameter, in (e.g. &#x60;16&#x60;) (required)
     * @param lang Use this parameter anywhere in the API to get *&#x60;name&#x60;* field translation of the following objects: **&#x60;Make&#x60;**, **&#x60;Model&#x60;**, **&#x60;Market&#x60;**. Across the *&#x60;name&#x60;* this objects will have *&#x60;name_en&#x60;* field with original english name. By default &#x60;en&#x60; language is used.  Available languages: &#x60;en,de,ru,es,pt,fr,ja,zh-cn,zh-tw&#x60;. Currently translation works for chinese &#x60;zh-cn&#x60; language only (optional)
     * @param brands Show information only for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;mitsubishi,nissan,toyota&#x60;) (optional)
     * @param brandsExclude Don&#39;t show information for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;geely,great-wall&#x60;) (optional)
     * @param countries Show information for local manufacturers from specified countries only. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;us,gb,jp&#x60;) (optional)
     * @param countriesExclude Don&#39;t show information for local manufacturers from specified countries. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;ru,ua&#x60;) (optional)
     * @return List&lt;MakeWithModels&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<MakeWithModels> searchByTireList(BigDecimal tireWidth, BigDecimal aspectRatio, BigDecimal rimDiameter, String lang, String brands, String brandsExclude, String countries, String countriesExclude) throws ApiException {
        ApiResponse<List<MakeWithModels>> resp = searchByTireListWithHttpInfo(tireWidth, aspectRatio, rimDiameter, lang, brands, brandsExclude, countries, countriesExclude);
        return resp.getData();
    }

    /**
     * Find models matching given tire parameters
     * Get a list of model modifications matching given tire, grouped by manufacturer.  It&#39;s an alias for _**&#x60;GET /tire/{tire}/&#x60;**_ method  (tire configuration is combined of required tire width, aspect ratio and rim diameter).
     * @param tireWidth Tire width, mm (e.g. &#x60;195&#x60;) (required)
     * @param aspectRatio Aspect ratio, % (e.g. &#x60;50&#x60;) (required)
     * @param rimDiameter Rim diameter, in (e.g. &#x60;16&#x60;) (required)
     * @param lang Use this parameter anywhere in the API to get *&#x60;name&#x60;* field translation of the following objects: **&#x60;Make&#x60;**, **&#x60;Model&#x60;**, **&#x60;Market&#x60;**. Across the *&#x60;name&#x60;* this objects will have *&#x60;name_en&#x60;* field with original english name. By default &#x60;en&#x60; language is used.  Available languages: &#x60;en,de,ru,es,pt,fr,ja,zh-cn,zh-tw&#x60;. Currently translation works for chinese &#x60;zh-cn&#x60; language only (optional)
     * @param brands Show information only for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;mitsubishi,nissan,toyota&#x60;) (optional)
     * @param brandsExclude Don&#39;t show information for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;geely,great-wall&#x60;) (optional)
     * @param countries Show information for local manufacturers from specified countries only. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;us,gb,jp&#x60;) (optional)
     * @param countriesExclude Don&#39;t show information for local manufacturers from specified countries. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;ru,ua&#x60;) (optional)
     * @return ApiResponse&lt;List&lt;MakeWithModels&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<MakeWithModels>> searchByTireListWithHttpInfo(BigDecimal tireWidth, BigDecimal aspectRatio, BigDecimal rimDiameter, String lang, String brands, String brandsExclude, String countries, String countriesExclude) throws ApiException {
        com.squareup.okhttp.Call call = searchByTireListValidateBeforeCall(tireWidth, aspectRatio, rimDiameter, lang, brands, brandsExclude, countries, countriesExclude, null, null);
        Type localVarReturnType = new TypeToken<List<MakeWithModels>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Find models matching given tire parameters (asynchronously)
     * Get a list of model modifications matching given tire, grouped by manufacturer.  It&#39;s an alias for _**&#x60;GET /tire/{tire}/&#x60;**_ method  (tire configuration is combined of required tire width, aspect ratio and rim diameter).
     * @param tireWidth Tire width, mm (e.g. &#x60;195&#x60;) (required)
     * @param aspectRatio Aspect ratio, % (e.g. &#x60;50&#x60;) (required)
     * @param rimDiameter Rim diameter, in (e.g. &#x60;16&#x60;) (required)
     * @param lang Use this parameter anywhere in the API to get *&#x60;name&#x60;* field translation of the following objects: **&#x60;Make&#x60;**, **&#x60;Model&#x60;**, **&#x60;Market&#x60;**. Across the *&#x60;name&#x60;* this objects will have *&#x60;name_en&#x60;* field with original english name. By default &#x60;en&#x60; language is used.  Available languages: &#x60;en,de,ru,es,pt,fr,ja,zh-cn,zh-tw&#x60;. Currently translation works for chinese &#x60;zh-cn&#x60; language only (optional)
     * @param brands Show information only for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;mitsubishi,nissan,toyota&#x60;) (optional)
     * @param brandsExclude Don&#39;t show information for specified manufacturers. Use _**&#x60;GET /makes/&#x60;**_ method to get the full list. (e.g. &#x60;geely,great-wall&#x60;) (optional)
     * @param countries Show information for local manufacturers from specified countries only. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;us,gb,jp&#x60;) (optional)
     * @param countriesExclude Don&#39;t show information for local manufacturers from specified countries. Use _**&#x60;GET /countries/&#x60;**_ method to get the full list of countries. (e.g. &#x60;ru,ua&#x60;) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call searchByTireListAsync(BigDecimal tireWidth, BigDecimal aspectRatio, BigDecimal rimDiameter, String lang, String brands, String brandsExclude, String countries, String countriesExclude, final ApiCallback<List<MakeWithModels>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = searchByTireListValidateBeforeCall(tireWidth, aspectRatio, rimDiameter, lang, brands, brandsExclude, countries, countriesExclude, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<MakeWithModels>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
